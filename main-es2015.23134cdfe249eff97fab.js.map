{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app/app.component.html","webpack:///./src/app/app/app.component.ts","webpack:///./src/app/core/animations/animations.service.ts","webpack:///./src/app/core/animations/route.animations.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/core.state.ts","webpack:///./src/app/core/error-handler/app-error-handler.service.ts","webpack:///./src/app/core/google-analytics/google-analytics.effects.ts","webpack:///./src/app/core/http-interceptors/http-error.interceptor.ts","webpack:///./src/app/core/local-storage/local-storage.service.ts","webpack:///./src/app/core/meta-reducers/debug.reducer.ts","webpack:///./src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","webpack:///./src/app/core/notifications/notification.service.ts","webpack:///./src/app/core/router/custom-serializer.ts","webpack:///./src/app/core/settings/settings.actions.ts","webpack:///./src/app/core/settings/settings.effects.ts","webpack:///./src/app/core/settings/settings.model.ts","webpack:///./src/app/core/settings/settings.reducer.ts","webpack:///./src/app/core/settings/settings.selectors.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/assets/logo.png","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.23134cdfe249eff97fab.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\";\r\nimport {PreloadAllModules, RouterModule, Routes} from \"@angular/router\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    redirectTo: \"about\",\r\n    pathMatch: \"full\"\r\n  },\r\n  {\r\n    path: \"about\",\r\n    loadChildren: () =>\r\n        import(\"./features/about/about.module\").then(m => m.AboutModule)\r\n  },\r\n  {\r\n    path: \"races\",\r\n    loadChildren: () =>\r\n        import(\"./features/races/races.module\").then(m => m.RacesModule)\r\n  },\r\n  {\r\n    path: \"faq\",\r\n    loadChildren: () =>\r\n        import(\"./features/faq/faq.module\").then(m => m.FaqModule)\r\n  },\r\n  {\r\n    path: \"contact\",\r\n    loadChildren: () =>\r\n        import(\"./features/contact/contact.module\").then(m => m.ContactModule)\r\n  },\r\n  {\r\n    path: \"**\",\r\n    redirectTo: \"about\"\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  // useHash supports github.io demo page, remove in your app\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      useHash: true,\r\n      scrollPositionRestoration: \"enabled\",\r\n      preloadingStrategy: PreloadAllModules\r\n    })\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {CoreModule} from './core/core.module';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app/app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n\r\n    // core & shared\r\n    CoreModule,\r\n    SharedModule,\r\n\r\n    // app\r\n    AppRoutingModule\r\n  ],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\r\n    <mat-sidenav-container>\r\n        <mat-sidenav #sidenav mode=\"push\">\r\n            <div class=\"branding\">\r\n                <img [src]=\"logo\"/><span>SLP MTB</span>\r\n            </div>\r\n            <mat-nav-list>\r\n                <a (click)=\"sidenav.close()\" *ngFor=\"let item of navigationSideMenu\" [routerLink]=\"[item.link]\"\r\n                   mat-list-item routerLinkActive=\"active\">{{ item.label }}</a>\r\n            </mat-nav-list>\r\n        </mat-sidenav>\r\n\r\n        <div class=\"wrapper\">\r\n            <div\r\n                    [class.mat-elevation-z4]=\"stickyHeader$ | async\"\r\n                    [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\"\r\n                    class=\"toolbar\"\r\n            >\r\n                <mat-toolbar color=\"primary\">\r\n                    <button (click)=\"sidenav.open()\" class=\"d-md-none\" mat-icon-button>\r\n                        <fa-icon icon=\"bars\"></fa-icon>\r\n                    </button>\r\n\r\n                    <!-- smaller screen title -->\r\n                    <span class=\"branding spacer center d-inline d-sm-none\" routerLink=\"\">SLP MTB</span>\r\n\r\n                    <!-- medium screen title -->\r\n                    <span class=\"branding spacer center d-none d-sm-inline d-md-none\" routerLink=\"\">\r\n                        <img [src]=\"logo\" alt=\"\"> SLP MTB\r\n                    </span>\r\n\r\n                    <!-- larger screen title -->\r\n                    <span class=\"branding spacer d-none d-md-inline\" routerLink=\"\">\r\n                        <img [src]=\"logo\" alt=\"\"> SLP MTB\r\n                    </span>\r\n                    <span class=\"d-none d-md-inline\">\r\n            <button\r\n                    *ngFor=\"let item of navigation\"\r\n                    [routerLink]=\"[item.link]\"\r\n                    class=\"nav-button\"\r\n                    mat-button\r\n                    routerLinkActive=\"active\"\r\n            >\r\n              {{ item.label }}\r\n            </button>\r\n          </span>\r\n                </mat-toolbar>\r\n            </div>\r\n\r\n            <div\r\n                    [@routeAnimations]=\"\r\n          o.isActivated &&\r\n          o.activatedRoute.routeConfig.data &&\r\n          o.activatedRoute.routeConfig.data.title\r\n        \"\r\n                    class=\"content\"\r\n            >\r\n                <router-outlet #o=\"outlet\"></router-outlet>\r\n            </div>\r\n\r\n            <!--      Footer -->\r\n            <!--      <div class=\"footer d-flex justify-content-center\">-->\r\n            <!--        <a href=\"mailto:stlouisparkmtb@gmail.com\">stlouisparkmtb@gmail.com</a>-->\r\n            <!--      </div>-->\r\n        </div>\r\n    </mat-sidenav-container>\r\n</div>\r\n","import browser from \"browser-detect\";\r\nimport {Component, OnInit} from \"@angular/core\";\r\nimport {select, Store} from \"@ngrx/store\";\r\nimport {Observable} from \"rxjs\";\r\n\r\nimport {environment as env} from \"../../environments/environment\";\r\n\r\nimport {\r\n  AppState,\r\n  LocalStorageService,\r\n  routeAnimations,\r\n  selectEffectiveTheme,\r\n  selectSettingsLanguage,\r\n  selectSettingsStickyHeader\r\n} from \"../core/core.module\";\r\nimport {actionSettingsChangeAnimationsPageDisabled} from \"../core/settings/settings.actions\";\r\n\r\n@Component({\r\n  selector: \"slpmtb-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.scss\"],\r\n  animations: [routeAnimations]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  version = env.versions.app;\r\n  logo = require(\"../../assets/logo.png\");\r\n  navigation = [\r\n    {link: \"about\", label: \"About\"},\r\n    {link: \"races\", label: \"Races\"},\r\n    {link: \"faq\", label: \"FAQ\"},\r\n    {link: \"contact\", label: \"Contact\"}\r\n  ];\r\n  navigationSideMenu = [\r\n    ...this.navigation\r\n    // add additional side nav options here\r\n  ];\r\n\r\n  stickyHeader$: Observable<boolean>;\r\n  language$: Observable<string>;\r\n  theme$: Observable<string>;\r\n\r\n  constructor(\r\n      private store: Store<AppState>,\r\n      private storageService: LocalStorageService\r\n  ) {\r\n  }\r\n\r\n  private static isIEorEdgeOrSafari() {\r\n    return [\"ie\", \"edge\", \"safari\"].includes(browser().name);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.storageService.testLocalStorage();\r\n    if (AppComponent.isIEorEdgeOrSafari()) {\r\n      this.store.dispatch(\r\n          actionSettingsChangeAnimationsPageDisabled({\r\n            pageAnimationsDisabled: true\r\n          })\r\n      );\r\n    }\r\n\r\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\r\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\r\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimationsService {\r\n  private static routeAnimationType: RouteAnimationType = 'NONE';\r\n\r\n  constructor() {\r\n    AnimationsService.routeAnimationType = 'NONE';\r\n  }\r\n\r\n  static isRouteAnimationsType(type: RouteAnimationType) {\r\n    return AnimationsService.routeAnimationType === type;\r\n  }\r\n\r\n  updateRouteAnimationType(\r\n    pageAnimations: boolean,\r\n    elementsAnimations: boolean\r\n  ) {\r\n    AnimationsService.routeAnimationType =\r\n      pageAnimations && elementsAnimations\r\n        ? 'ALL'\r\n        : pageAnimations\r\n        ? 'PAGE'\r\n        : elementsAnimations\r\n          ? 'ELEMENTS'\r\n          : 'NONE';\r\n  }\r\n}\r\n\r\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\r\n","import {animate, query, sequence, stagger, style, transition, trigger} from '@angular/animations';\r\nimport {AnimationsService} from './animations.service';\r\n\r\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\r\n\r\nconst STEPS_ALL: any[] = [\r\n  query(':enter > *', style({opacity: 0, position: 'fixed'}), {\r\n    optional: true\r\n  }),\r\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({opacity: 0}), {\r\n    optional: true\r\n  }),\r\n  sequence([\r\n    query(\r\n      ':leave > *',\r\n      [\r\n        style({transform: 'translateY(0%)', opacity: 1}),\r\n        animate(\r\n          '0.2s ease-in-out',\r\n          style({transform: 'translateY(-3%)', opacity: 0})\r\n        ),\r\n        style({position: 'fixed'})\r\n      ],\r\n      {optional: true}\r\n    ),\r\n    query(\r\n      ':enter > *',\r\n      [\r\n        style({\r\n          transform: 'translateY(-3%)',\r\n          opacity: 0,\r\n          position: 'static'\r\n        }),\r\n        animate(\r\n          '0.5s ease-in-out',\r\n          style({transform: 'translateY(0%)', opacity: 1})\r\n        )\r\n      ],\r\n      {optional: true}\r\n    )\r\n  ]),\r\n  query(\r\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\r\n    stagger(75, [\r\n      style({transform: 'translateY(10%)', opacity: 0}),\r\n      animate(\r\n        '0.5s ease-in-out',\r\n        style({transform: 'translateY(0%)', opacity: 1})\r\n      )\r\n    ]),\r\n    {optional: true}\r\n  )\r\n];\r\nconst STEPS_NONE = [];\r\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\r\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\r\n\r\nexport const routeAnimations = trigger('routeAnimations', [\r\n  transition(isRouteAnimationsAll, STEPS_ALL),\r\n  transition(isRouteAnimationsNone, STEPS_NONE),\r\n  transition(isRouteAnimationsPage, STEPS_PAGE),\r\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\r\n]);\r\n\r\nexport function isRouteAnimationsAll() {\r\n  return AnimationsService.isRouteAnimationsType('ALL');\r\n}\r\n\r\nexport function isRouteAnimationsNone() {\r\n  return AnimationsService.isRouteAnimationsType('NONE');\r\n}\r\n\r\nexport function isRouteAnimationsPage() {\r\n  return AnimationsService.isRouteAnimationsType('PAGE');\r\n}\r\n\r\nexport function isRouteAnimationsElements() {\r\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\r\n}\r\n","import {CommonModule} from \"@angular/common\";\r\nimport {ErrorHandler, NgModule, Optional, SkipSelf} from \"@angular/core\";\r\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from \"@angular/common/http\";\r\nimport {RouterStateSerializer, StoreRouterConnectingModule} from \"@ngrx/router-store\";\r\nimport {StoreModule} from \"@ngrx/store\";\r\nimport {EffectsModule} from \"@ngrx/effects\";\r\nimport {StoreDevtoolsModule} from \"@ngrx/store-devtools\";\r\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\r\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\r\n\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nimport {AppState, metaReducers, reducers, selectRouterState} from \"./core.state\";\r\nimport {ROUTE_ANIMATIONS_ELEMENTS, routeAnimations} from \"./animations/route.animations\";\r\nimport {AnimationsService} from \"./animations/animations.service\";\r\nimport {AppErrorHandler} from \"./error-handler/app-error-handler.service\";\r\nimport {CustomSerializer} from \"./router/custom-serializer\";\r\nimport {LocalStorageService} from \"./local-storage/local-storage.service\";\r\nimport {HttpErrorInterceptor} from \"./http-interceptors/http-error.interceptor\";\r\nimport {GoogleAnalyticsEffects} from \"./google-analytics/google-analytics.effects\";\r\nimport {NotificationService} from \"./notifications/notification.service\";\r\nimport {SettingsEffects} from \"./settings/settings.effects\";\r\nimport {selectEffectiveTheme, selectSettingsLanguage, selectSettingsStickyHeader} from \"./settings/settings.selectors\";\r\n\r\nexport {\r\n  routeAnimations,\r\n  AppState,\r\n  LocalStorageService,\r\n  ROUTE_ANIMATIONS_ELEMENTS,\r\n  AnimationsService,\r\n  selectRouterState,\r\n  NotificationService,\r\n  selectEffectiveTheme,\r\n  selectSettingsLanguage,\r\n  selectSettingsStickyHeader\r\n};\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(\r\n    http,\r\n    `${environment.i18nPrefix}/assets/i18n/`,\r\n      \".json\"\r\n  );\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular\r\n    CommonModule,\r\n    HttpClientModule,\r\n\r\n    // ngrx\r\n    StoreModule.forRoot(reducers, {metaReducers}),\r\n    StoreRouterConnectingModule.forRoot(),\r\n    EffectsModule.forRoot([SettingsEffects, GoogleAnalyticsEffects]),\r\n    environment.production\r\n      ? []\r\n      : StoreDevtoolsModule.instrument({\r\n          name: \"SLP MTB\"\r\n        }),\r\n\r\n    // 3rd party\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true},\r\n    {provide: ErrorHandler, useClass: AppErrorHandler},\r\n    {provide: RouterStateSerializer, useClass: CustomSerializer}\r\n  ],\r\n  exports: [TranslateModule]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n        parentModule: CoreModule\r\n  ) {\r\n    if (parentModule) {\r\n      throw new Error(\"CoreModule is already loaded. Import only in AppModule\");\r\n    }\r\n  }\r\n}\r\n","import {ActionReducerMap, createFeatureSelector, MetaReducer} from \"@ngrx/store\";\r\nimport {routerReducer, RouterReducerState} from \"@ngrx/router-store\";\r\n\r\nimport {environment} from \"../../environments/environment\";\r\n\r\nimport {initStateFromLocalStorage} from \"./meta-reducers/init-state-from-local-storage.reducer\";\r\nimport {debug} from \"./meta-reducers/debug.reducer\";\r\nimport {RouterStateUrl} from \"./router/router.state\";\r\nimport {settingsReducer} from \"./settings/settings.reducer\";\r\nimport {SettingsState} from \"./settings/settings.model\";\r\n\r\nexport const reducers: ActionReducerMap<AppState> = {\r\n  settings: settingsReducer,\r\n  router: routerReducer\r\n};\r\n\r\nexport const metaReducers: MetaReducer<AppState>[] = [\r\n  initStateFromLocalStorage\r\n];\r\n\r\nif (!environment.production) {\r\n  if (!environment.test) {\r\n    metaReducers.unshift(debug);\r\n  }\r\n}\r\n\r\nexport const selectSettingsState = createFeatureSelector<AppState,\r\n    SettingsState>(\"settings\");\r\n\r\nexport const selectRouterState = createFeatureSelector<AppState,\r\n    RouterReducerState<RouterStateUrl>>(\"router\");\r\n\r\nexport interface AppState {\r\n  settings: SettingsState;\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n","import {ErrorHandler, Injectable} from '@angular/core';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\n\r\nimport {environment} from '../../../environments/environment';\r\n\r\nimport {NotificationService} from '../notifications/notification.service';\r\n\r\n/** Application-wide error handler that adds a UI notification to the error handling\r\n * provided by the default Angular ErrorHandler.\r\n */\r\n@Injectable()\r\nexport class AppErrorHandler extends ErrorHandler {\r\n  constructor(private notificationsService: NotificationService) {\r\n    super();\r\n  }\r\n\r\n  handleError(error: Error | HttpErrorResponse) {\r\n    let displayMessage = 'An error occurred.';\r\n\r\n    if (!environment.production) {\r\n      displayMessage += ' See console for details.';\r\n    }\r\n\r\n    this.notificationsService.error(displayMessage);\r\n\r\n    super.handleError(error);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\nimport {createEffect} from '@ngrx/effects';\r\nimport {filter, tap} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class GoogleAnalyticsEffects {\r\n  pageView = createEffect(\r\n    () => () =>\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        tap((event: NavigationEnd) => {\r\n          (<any>window).ga('set', 'page', event.urlAfterRedirects);\r\n          (<any>window).ga('send', 'pageview');\r\n        })\r\n      ),\r\n    {dispatch: false}\r\n  );\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n}\r\n","import {ErrorHandler, Injectable, Injector} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n/** Passes HttpErrorResponse to application-wide error handler */\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {\r\n  }\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: any) => {\r\n          if (err instanceof HttpErrorResponse) {\r\n            const appErrorHandler = this.injector.get(ErrorHandler);\r\n            appErrorHandler.handleError(err);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nconst APP_PREFIX = 'ANMS-';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService {\r\n  constructor() {\r\n  }\r\n\r\n  static loadInitialState() {\r\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\r\n      if (storageKey.includes(APP_PREFIX)) {\r\n        const stateKeys = storageKey\r\n          .replace(APP_PREFIX, '')\r\n          .toLowerCase()\r\n          .split('.')\r\n          .map(key =>\r\n            key\r\n              .split('-')\r\n              .map((token, index) =>\r\n                index === 0\r\n                  ? token\r\n                  : token.charAt(0).toUpperCase() + token.slice(1)\r\n              )\r\n              .join('')\r\n          );\r\n        let currentStateRef = state;\r\n        stateKeys.forEach((key, index) => {\r\n          if (index === stateKeys.length - 1) {\r\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\r\n            return;\r\n          }\r\n          currentStateRef[key] = currentStateRef[key] || {};\r\n          currentStateRef = currentStateRef[key];\r\n        });\r\n      }\r\n      return state;\r\n    }, {});\r\n  }\r\n\r\n  setItem(key: string, value: any) {\r\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\r\n  }\r\n\r\n  getItem(key: string) {\r\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\r\n  }\r\n\r\n  removeItem(key: string) {\r\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\r\n  }\r\n\r\n  /** Tests that localStorage exists, can be written to, and read from. */\r\n  testLocalStorage() {\r\n    const testValue = 'testValue';\r\n    const testKey = 'testKey';\r\n    let retrievedValue: string;\r\n    const errorMessage = 'localStorage did not return expected value';\r\n\r\n    this.setItem(testKey, testValue);\r\n    retrievedValue = this.getItem(testKey);\r\n    this.removeItem(testKey);\r\n\r\n    if (retrievedValue !== testValue) {\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n}\r\n","import {ActionReducer} from '@ngrx/store';\r\n\r\nimport {AppState} from '../core.state';\r\n\r\nexport function debug(\r\n  reducer: ActionReducer<AppState>\r\n): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    console.log(`[DEBUG] action: ${action.type}`, {\r\n      payload: (<any>action).payload,\r\n      oldState: state,\r\n      newState\r\n    });\r\n    return newState;\r\n  };\r\n}\r\n","import {ActionReducer, INIT, UPDATE} from '@ngrx/store';\r\n\r\nimport {LocalStorageService} from '../local-storage/local-storage.service';\r\nimport {AppState} from '../core.state';\r\n\r\nexport function initStateFromLocalStorage(\r\n  reducer: ActionReducer<AppState>\r\n): ActionReducer<AppState> {\r\n  return function (state, action) {\r\n    const newState = reducer(state, action);\r\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\r\n      return {...newState, ...LocalStorageService.loadInitialState()};\r\n    }\r\n    return newState;\r\n  };\r\n}\r\n","import {Injectable, NgZone} from '@angular/core';\r\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  constructor(\r\n    private readonly snackBar: MatSnackBar,\r\n    private readonly zone: NgZone\r\n  ) {\r\n  }\r\n\r\n  default(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'default-notification-overlay'\r\n    });\r\n  }\r\n\r\n  info(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'info-notification-overlay'\r\n    });\r\n  }\r\n\r\n  success(message: string) {\r\n    this.show(message, {\r\n      duration: 2000,\r\n      panelClass: 'success-notification-overlay'\r\n    });\r\n  }\r\n\r\n  warn(message: string) {\r\n    this.show(message, {\r\n      duration: 2500,\r\n      panelClass: 'warning-notification-overlay'\r\n    });\r\n  }\r\n\r\n  error(message: string) {\r\n    this.show(message, {\r\n      duration: 3000,\r\n      panelClass: 'error-notification-overlay'\r\n    });\r\n  }\r\n\r\n  private show(message: string, configuration: MatSnackBarConfig) {\r\n    // Need to open snackBar from Angular zone to prevent issues with its position per\r\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\r\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {RouterStateSnapshot} from '@angular/router';\r\nimport {RouterStateSerializer} from '@ngrx/router-store';\r\nimport {RouterStateUrl} from './router.state';\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: {queryParams}\r\n    } = routerState;\r\n    const {params} = route;\r\n\r\n    return {url, params, queryParams};\r\n  }\r\n}\r\n","import {createAction, props} from '@ngrx/store';\r\n\r\nimport {Language} from './settings.model';\r\n\r\nexport const actionSettingsChangeLanguage = createAction(\r\n  '[Settings] Change Language',\r\n  props<{ language: Language }>()\r\n);\r\n\r\nexport const actionSettingsChangeTheme = createAction(\r\n  '[Settings] Change Theme',\r\n  props<{ theme: string }>()\r\n);\r\nexport const actionSettingsChangeAutoNightMode = createAction(\r\n  '[Settings] Change Auto Night Mode',\r\n  props<{ autoNightMode: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeStickyHeader = createAction(\r\n  '[Settings] Change Sticky Header',\r\n  props<{ stickyHeader: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsPage = createAction(\r\n  '[Settings] Change Animations Page',\r\n  props<{ pageAnimations: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\r\n  '[Settings] Change Animations Page Disabled',\r\n  props<{ pageAnimationsDisabled: boolean }>()\r\n);\r\n\r\nexport const actionSettingsChangeAnimationsElements = createAction(\r\n  '[Settings] Change Animations Elements',\r\n  props<{ elementsAnimations: boolean }>()\r\n);\r\nexport const actionSettingsChangeHour = createAction(\r\n  '[Settings] Change Hours',\r\n  props<{ hour: number }>()\r\n);\r\n","import {Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {select, Store} from '@ngrx/store';\r\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {combineLatest, merge, of} from 'rxjs';\r\nimport {distinctUntilChanged, tap, withLatestFrom} from 'rxjs/operators';\r\n\r\nimport {selectSettingsState} from '../core.state';\r\nimport {LocalStorageService} from '../local-storage/local-storage.service';\r\nimport {AnimationsService} from '../animations/animations.service';\r\n\r\nimport {\r\n    actionSettingsChangeAnimationsElements,\r\n    actionSettingsChangeAnimationsPage,\r\n    actionSettingsChangeAnimationsPageDisabled,\r\n    actionSettingsChangeAutoNightMode,\r\n    actionSettingsChangeLanguage,\r\n    actionSettingsChangeStickyHeader,\r\n    actionSettingsChangeTheme\r\n} from './settings.actions';\r\nimport {\r\n    selectEffectiveTheme,\r\n    selectElementsAnimations,\r\n    selectPageAnimations,\r\n    selectSettingsLanguage\r\n} from './settings.selectors';\r\nimport {State} from './settings.model';\r\n\r\nexport const SETTINGS_KEY = 'SETTINGS';\r\n\r\nconst INIT = of('slpmtb-init-effect-trigger');\r\n\r\n@Injectable()\r\nexport class SettingsEffects {\r\n  persistSettings = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(\r\n          actionSettingsChangeAnimationsElements,\r\n          actionSettingsChangeAnimationsPage,\r\n          actionSettingsChangeAnimationsPageDisabled,\r\n          actionSettingsChangeAutoNightMode,\r\n          actionSettingsChangeLanguage,\r\n          actionSettingsChangeStickyHeader,\r\n          actionSettingsChangeTheme\r\n        ),\r\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\r\n        tap(([action, settings]) =>\r\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\r\n        )\r\n      ),\r\n    {dispatch: false}\r\n  );\r\n  updateRouteAnimationType = createEffect(\r\n    () =>\r\n      merge(\r\n        INIT,\r\n        this.actions$.pipe(\r\n          ofType(\r\n            actionSettingsChangeAnimationsElements,\r\n            actionSettingsChangeAnimationsPage\r\n          )\r\n        )\r\n      ).pipe(\r\n        withLatestFrom(\r\n          combineLatest([\r\n            this.store.pipe(select(selectPageAnimations)),\r\n            this.store.pipe(select(selectElementsAnimations))\r\n          ])\r\n        ),\r\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\r\n          this.animationsService.updateRouteAnimationType(\r\n            pageAnimations,\r\n            elementsAnimations\r\n          )\r\n        )\r\n      ),\r\n    {dispatch: false}\r\n  );\r\n  updateTheme = createEffect(\r\n    () =>\r\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\r\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\r\n        tap(([action, effectiveTheme]) => {\r\n          const classList = this.overlayContainer.getContainerElement()\r\n            .classList;\r\n          const toRemove = Array.from(classList).filter((item: string) =>\r\n            item.includes('-theme')\r\n          );\r\n          if (toRemove.length) {\r\n            classList.remove(...toRemove);\r\n          }\r\n          classList.add(effectiveTheme);\r\n        })\r\n      ),\r\n    {dispatch: false}\r\n  );\r\n  setTranslateServiceLanguage = createEffect(\r\n    () =>\r\n      this.store.pipe(\r\n        select(selectSettingsLanguage),\r\n        distinctUntilChanged(),\r\n        tap(language => this.translateService.use(language))\r\n      ),\r\n    {dispatch: false}\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store<State>,\r\n    private router: Router,\r\n    private overlayContainer: OverlayContainer,\r\n    private localStorageService: LocalStorageService,\r\n    private animationsService: AnimationsService,\r\n    private translateService: TranslateService\r\n  ) {\r\n  }\r\n}\r\n","import {AppState} from '../core.module';\r\n\r\nexport const NIGHT_MODE_THEME = 'DEFAULT-THEME';\r\n\r\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\r\n\r\nexport interface SettingsState {\r\n  language: string;\r\n  theme: string;\r\n  autoNightMode: boolean;\r\n  nightTheme: string;\r\n  stickyHeader: boolean;\r\n  pageAnimations: boolean;\r\n  pageAnimationsDisabled: boolean;\r\n  elementsAnimations: boolean;\r\n  hour: number;\r\n}\r\n\r\nexport interface State extends AppState {\r\n  settings: SettingsState;\r\n}\r\n","import {NIGHT_MODE_THEME, SettingsState} from './settings.model';\r\nimport {\r\n    actionSettingsChangeAnimationsElements,\r\n    actionSettingsChangeAnimationsPage,\r\n    actionSettingsChangeAnimationsPageDisabled,\r\n    actionSettingsChangeAutoNightMode,\r\n    actionSettingsChangeHour,\r\n    actionSettingsChangeLanguage,\r\n    actionSettingsChangeStickyHeader,\r\n    actionSettingsChangeTheme\r\n} from './settings.actions';\r\nimport {Action, createReducer, on} from '@ngrx/store';\r\n\r\nexport const initialState: SettingsState = {\r\n  language: 'en',\r\n  theme: 'DEFAULT-THEME',\r\n  autoNightMode: false,\r\n  nightTheme: NIGHT_MODE_THEME,\r\n  stickyHeader: true,\r\n  pageAnimations: true,\r\n  pageAnimationsDisabled: false,\r\n  elementsAnimations: true,\r\n  hour: 0\r\n};\r\n\r\nconst reducer = createReducer(\r\n  initialState,\r\n  on(\r\n    actionSettingsChangeLanguage,\r\n    actionSettingsChangeTheme,\r\n    actionSettingsChangeAutoNightMode,\r\n    actionSettingsChangeStickyHeader,\r\n    actionSettingsChangeAnimationsPage,\r\n    actionSettingsChangeAnimationsElements,\r\n    actionSettingsChangeHour,\r\n    (state, action) => ({...state, ...action})\r\n  ),\r\n  on(\r\n    actionSettingsChangeAnimationsPageDisabled,\r\n    (state, {pageAnimationsDisabled}) => ({\r\n      ...state,\r\n      pageAnimationsDisabled,\r\n      pageAnimations: false\r\n    })\r\n  )\r\n);\r\n\r\nexport function settingsReducer(\r\n  state: SettingsState | undefined,\r\n  action: Action\r\n) {\r\n  return reducer(state, action);\r\n}\r\n","import {createSelector} from '@ngrx/store';\r\n\r\nimport {SettingsState} from './settings.model';\r\nimport {selectSettingsState} from '../core.state';\r\n\r\nexport const selectSettings = createSelector(\r\n  selectSettingsState,\r\n  (state: SettingsState) => state\r\n);\r\n\r\nexport const selectSettingsStickyHeader = createSelector(\r\n  selectSettings,\r\n  (state: SettingsState) => state.stickyHeader\r\n);\r\n\r\nexport const selectSettingsLanguage = createSelector(\r\n  selectSettings,\r\n  (state: SettingsState) => state.language\r\n);\r\n\r\nexport const selectTheme = createSelector(\r\n  selectSettings,\r\n  settings => settings.theme\r\n);\r\n\r\nexport const selectPageAnimations = createSelector(\r\n  selectSettings,\r\n  settings => settings.pageAnimations\r\n);\r\n\r\nexport const selectElementsAnimations = createSelector(\r\n  selectSettings,\r\n  settings => settings.elementsAnimations\r\n);\r\n\r\nexport const selectAutoNightMode = createSelector(\r\n  selectSettings,\r\n  settings => settings.autoNightMode\r\n);\r\n\r\nexport const selectNightTheme = createSelector(\r\n  selectSettings,\r\n  settings => settings.nightTheme\r\n);\r\n\r\nexport const selectHour = createSelector(\r\n  selectSettings,\r\n  settings => settings.hour\r\n);\r\n\r\nexport const selectIsNightHour = createSelector(\r\n  selectAutoNightMode,\r\n  selectHour,\r\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\r\n);\r\n\r\nexport const selectEffectiveTheme = createSelector(\r\n  selectTheme,\r\n  selectNightTheme,\r\n  selectIsNightHour,\r\n  (theme, nightTheme, isNightHour) =>\r\n    (isNightHour ? nightTheme : theme).toLowerCase()\r\n);\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport {TranslateModule} from '@ngx-translate/core';\r\n\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatSliderModule} from '@angular/material/';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material';\r\n\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n    faBars,\r\n    faBook,\r\n    faCaretDown,\r\n    faCaretUp,\r\n    faCheck,\r\n    faCog,\r\n    faEdit,\r\n    faExclamationTriangle,\r\n    faFilter,\r\n    faLanguage,\r\n    faLightbulb,\r\n    faPaintBrush,\r\n    faPlayCircle,\r\n    faPlus,\r\n    faPowerOff,\r\n    faRocket,\r\n    faSquare,\r\n    faStream,\r\n    faTasks,\r\n    faTimes,\r\n    faTrash,\r\n    faUserCircle,\r\n    faWindowMaximize\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport {faGithub, faInstagram, faMediumM, faTwitter, faYoutube} from '@fortawesome/free-brands-svg-icons';\r\nimport {BigInputComponent} from './big-input/big-input/big-input.component';\r\nimport {BigInputActionComponent} from './big-input/big-input-action/big-input-action.component';\r\n\r\nlibrary.add(\r\n  faBars,\r\n  faUserCircle,\r\n  faPowerOff,\r\n  faCog,\r\n  faRocket,\r\n  faPlayCircle,\r\n  faGithub,\r\n  faMediumM,\r\n  faTwitter,\r\n  faInstagram,\r\n  faYoutube,\r\n  faPlus,\r\n  faEdit,\r\n  faTrash,\r\n  faTimes,\r\n  faCaretUp,\r\n  faCaretDown,\r\n  faExclamationTriangle,\r\n  faFilter,\r\n  faTasks,\r\n  faCheck,\r\n  faSquare,\r\n  faLanguage,\r\n  faPaintBrush,\r\n  faLightbulb,\r\n  faWindowMaximize,\r\n  faStream,\r\n  faBook\r\n);\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n\r\n    TranslateModule,\r\n\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatChipsModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    MatDividerModule,\r\n\r\n    FontAwesomeModule\r\n  ],\r\n  declarations: [\r\n    BigInputComponent,\r\n      BigInputActionComponent\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    TranslateModule,\r\n\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatSlideToggleModule,\r\n    MatDividerModule,\r\n    MatSliderModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n\r\n    FontAwesomeModule,\r\n\r\n    BigInputComponent,\r\n      BigInputActionComponent\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n","module.exports = __webpack_public_path__ + \"logo.b05d9c70917447f244da.png\";","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nconst packageJson = require('../../package.json');\r\n\r\nexport const environment = {\r\n  appName: 'SLP MTB',\r\n  envName: 'DEV',\r\n  production: false,\r\n  test: false,\r\n  i18nPrefix: '',\r\n  versions: {\r\n    app: packageJson.version,\r\n    angular: packageJson.dependencies['@angular/core'],\r\n    ngrx: packageJson.dependencies['@ngrx/store'],\r\n    material: packageJson.dependencies['@angular/material'],\r\n    bootstrap: packageJson.dependencies.bootstrap,\r\n    rxjs: packageJson.dependencies.rxjs,\r\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\r\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\r\n    angularCli: packageJson.devDependencies['@angular/cli'],\r\n    typescript: packageJson.devDependencies['typescript'],\r\n    cypress: packageJson.devDependencies['cypress']\r\n  }\r\n};\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}